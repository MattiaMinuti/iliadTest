{
  "openapi": "3.0.0",
  "info": {
    "title": "Order Management System API",
    "version": "1.0.0",
    "description": "RESTful API for managing orders and products in an order management system",
    "contact": {
      "email": "admin@ordermanagement.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local Development Server"
    },
    {
      "url": "http://backend:8000",
      "description": "Docker Development Server"
    }
  ],
  "tags": [
    {
      "name": "Orders",
      "description": "Order management endpoints"
    },
    {
      "name": "Products",
      "description": "Product management endpoints"
    }
  ],
  "paths": {
    "/api/v1/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get paginated list of orders",
        "description": "Retrieve a paginated list of orders with optional filtering by date range, status, and search",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 15
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Filter orders from this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-01-01"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Filter orders until this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-12-31"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by order status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "processing", "completed", "cancelled"]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in order name or description",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order",
        "description": "Create a new order with products",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Insufficient stock or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order by ID",
        "description": "Retrieve a specific order with its products",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order ID",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Orders"],
        "summary": "Delete order",
        "description": "Delete an order and restore stock for its products",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order ID",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Order deleted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get paginated list of products",
        "description": "Retrieve a paginated list of products with optional filtering",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 15
            }
          },
          {
            "name": "stock_status",
            "in": "query",
            "description": "Filter by stock status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["in_stock", "out_of_stock"]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in product name, SKU or description",
            "required": false,
            "schema": {
              "type": "string",
              "example": "laptop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "description": "Create a new product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Order #001"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Customer order description"
          },
          "order_date": {
            "type": "string",
            "format": "date",
            "example": "2024-01-01"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "completed", "cancelled"],
            "example": "pending"
          },
          "total_amount": {
            "type": "number",
            "format": "decimal",
            "example": 1299.99
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T10:00:00.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T10:00:00.000000Z"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProduct"
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Laptop Pro 15\""
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "High-performance laptop"
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "example": 1299.99
          },
          "sku": {
            "type": "string",
            "example": "LAPTOP-PRO-15"
          },
          "stock_quantity": {
            "type": "integer",
            "example": 25
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T10:00:00.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T10:00:00.000000Z"
          }
        }
      },
      "OrderProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Product"
          },
          {
            "type": "object",
            "properties": {
              "pivot": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "example": 2
                  },
                  "unit_price": {
                    "type": "number",
                    "format": "decimal",
                    "example": 1299.99
                  },
                  "total_price": {
                    "type": "number",
                    "format": "decimal",
                    "example": 2599.98
                  }
                }
              }
            }
          }
        ]
      },
      "CreateOrderRequest": {
        "type": "object",
        "required": ["name", "order_date", "products"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Order #001"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Customer order"
          },
          "order_date": {
            "type": "string",
            "format": "date",
            "example": "2024-01-01"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "completed", "cancelled"],
            "example": "pending"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["product_id", "quantity"],
              "properties": {
                "product_id": {
                  "type": "integer",
                  "example": 1
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 2
                }
              }
            }
          }
        }
      },
      "CreateProductRequest": {
        "type": "object",
        "required": ["name", "price", "sku", "stock_quantity"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Laptop Pro 15\""
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "High-performance laptop"
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "minimum": 0,
            "example": 1299.99
          },
          "sku": {
            "type": "string",
            "example": "LAPTOP-PRO-15"
          },
          "stock_quantity": {
            "type": "integer",
            "minimum": 0,
            "example": 25
          }
        }
      },
      "OrderListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "current_page": {
                "type": "integer",
                "example": 1
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "last_page": {
                "type": "integer",
                "example": 5
              },
              "per_page": {
                "type": "integer",
                "example": 15
              },
              "total": {
                "type": "integer",
                "example": 75
              }
            }
          }
        }
      },
      "ProductListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "current_page": {
                "type": "integer",
                "example": 1
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "last_page": {
                "type": "integer",
                "example": 3
              },
              "per_page": {
                "type": "integer",
                "example": 15
              },
              "total": {
                "type": "integer",
                "example": 45
              }
            }
          }
        }
      },
      "OrderResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Order created successfully"
          },
          "data": {
            "$ref": "#/components/schemas/Order"
          }
        }
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Product created successfully"
          },
          "data": {
            "$ref": "#/components/schemas/Product"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "An error occurred"
          },
          "error": {
            "type": "string",
            "example": "Detailed error message"
          }
        }
      }
    }
  }
}
